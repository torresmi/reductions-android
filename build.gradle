import io.gitlab.arturbosch.detekt.report.ReportMergeTask

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    dependencies {
        classpath Libs.com_android_tools_build_gradle
        classpath Libs.kotlin_gradle_plugin
        classpath Libs.detekt_gradle_plugin
        classpath Libs.gradle_android_junit_jacoco_plugin
        classpath Libs.spotless_plugin_gradle
        classpath Libs.detekt_gradle_plugin
        classpath Libs.sonarqube_gradle_plugin
        classpath Libs.io_arrow_kt_analysis_kotlin_gradle_plugin
    }
}

task reportMerge(type: ReportMergeTask) {
    output = project.layout.buildDirectory.file("reports/detekt/merge.xml")
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }

    // Disable kapt for tests
    tasks.matching {
        it.name.startsWith("kapt") && it.name.endsWith("TestKotlin")
    }.configureEach { it.enabled = false }

    apply from: "$rootDir/scripts/detekt.gradle"
    plugins.withType(io.gitlab.arturbosch.detekt.DetektPlugin) {
        tasks.withType(io.gitlab.arturbosch.detekt.Detekt) { detektTask ->
            finalizedBy(reportMerge)

            reportMerge.configure { mergeTask ->
                mergeTask.input.from(detektTask.xmlReportFile)
            }
        }
    }
}

subprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    apply plugin: 'io.arrow-kt.analysis.kotlin'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: "$rootDir/scripts/jacoco.gradle"
apply from: "$rootDir/scripts/spotless.gradle"
apply from: "$rootDir/scripts/sonarqube.gradle"
