name: CI

on: 
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      kotlin: ${{ steps.changes.outputs.kotlin }}
      gradle: ${{ steps.changes.outputs.gradle }}
      action: ${{ steps.changes.outputs.action }}
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            kotlin:
              - '**/*.kt'
            gradle:
              - '**/*.gradle'
            action:
              - '.github/workflows/*.yml'

  action_lint:
    runs-on: ubuntu-latest
    needs: changes  
    if: ${{ needs.changes.outputs.action == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Reviewdog Actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          reporter: github-pr-review

  detekt:
    runs-on: ubuntu-latest
    needs: changes 
    if: ${{ needs.changes.outputs.kotlin == 'true' }}
    steps:         
      - uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Detekt
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: |
            buildSrc/**/Libs.kt
          arguments: |
            detekt reportMerge --continue

      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1

      - name: Reviewdog local reports
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog  -conf=reviewdog.yml -runners=detekt -reporter=github-pr-review 

  build:
    runs-on: ubuntu-latest
    needs: changes 
    if: ${{ needs.changes.outputs.kotlin == 'true' || needs.changes.outputs.gradle == 'true' }}
    steps:
      - uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build and check debug
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: |
            buildSrc/**/Libs.kt
          arguments: |
            spotlessCheck
            assembleDebug
            bundleDebug
            lintDebug
            test
         
      - name: Upload apk
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: app/build/outputs/apk

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: |
            app/build/reports
            build/reports

      - name: Copy unit test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: junit/*.xml

      - name: Upload unit test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-results
          path: junit
