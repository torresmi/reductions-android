name: CI

on: 
  pull_request:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Spotless check
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: |
            buildSrc/**/Libs.kt
          arguments: spotlessCheck
      
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build and check debug
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: |
            buildSrc/**/Libs.kt
          arguments: |
            assembleDebug
            bundleDebug

      - name: Upload apk
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: app/build/outputs/apk

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Lint debug
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: |
            buildSrc/**/Libs.kt
          arguments: lintDebug

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: app/build/reports
    
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run unit tests
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: |
            buildSrc/**/Libs.kt
          arguments: test

      - name: Copy unit test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: junit/*.xml

      - name: Upload unit test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: junit-results
          path: junit 
