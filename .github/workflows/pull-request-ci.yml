name: Pull Request CI

on: 
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      kotlin: ${{ steps.changes.outputs.kotlin }}
      application: ${{ steps.changes.outputs.application }}
      action: ${{ steps.changes.outputs.action }}
      markdown: ${{ steps.changes.outputs.markdown }}
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            kotlin:
              - '**/*.kt'
            application:
              - '**/*.gradle'
              - '**/*.gradle.kts'
              - 'gradle/**'
              - 'versions.properties'
              - '**/src/**'
            action:
              - '.github/workflows/*.yml'
            markdown:
              - '**/*.md'

  action_lint:
    runs-on: ubuntu-latest
    needs: changes  
    if: ${{ needs.changes.outputs.action == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Reviewdog Actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          reporter: github-pr-review

  snyk:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.kotlin == 'true ' }}
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk11@0.4.0
        continue-on-error: true 
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  markdownlint:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.markdown == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Markdownlint
        uses: reviewdog/action-markdownlint@v0.14
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

      - name: Misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          locale: "US"
          pattern: |
            *.md

  build:
    runs-on: ubuntu-latest
    needs: changes 
    if: ${{ needs.changes.outputs.application == 'true' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and check debug
        uses: burrunan/gradle-cache-action@v1
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          gradle-dependencies-cache-key: |
            gradle/libs.versions.toml
          arguments: |
            spotlessCheck --no-configuration-cache
            detekt reportMerge --continue
            assembleDebug
            bundleDebug
            lintDebug
            debugCoverage
            jacocoTestReport
            sonar

      - name: Setup reviewdog
        if: always()
        uses: reviewdog/action-setup@v1

      - name: Upload detekt results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-results
          path: build/reports/detekt/merge.xml

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            app/build/reports
            build/reports

      - name: Copy unit test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: junit/*.xml

      - name: Upload unit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: junit

      - name: Reviewdog Detekt
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog  -conf=reviewdog.yml -runners=detekt -reporter=github-pr-review 

      - name: Reviewdog Lint
        if: always()
        uses: DVDAndroid/action-android-lint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          lint_xml_file: app/build/reports/lint-results-debug.xml
          reporter: github-pr-review
