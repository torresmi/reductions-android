import kotlin.String

/**
 * Generated by
 *    $ ./gradlew buildSrcLibs
 * Re-run when you add a new dependency to the build
 *
 * Find which updates are available by running
 *     $ ./gradlew refreshVersions
 * And edit the file `versions.properties`
 *
 * See https://github.com/jmfayard/refreshVersions
 */
object Libs {
    const val appcompat: String = "androidx.appcompat:appcompat:_"

    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:_"

    const val espresso_core: String = "androidx.test.espresso:espresso-core:_"

    const val androidx_test_rules: String = "androidx.test:rules:_"

    const val androidx_test_runner: String = "androidx.test:runner:_"

    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:_"

    const val fixture: String = "com.appmattus.fixture:fixture:_"

    const val spotless_plugin_gradle: String = "com.diffplug.spotless:spotless-plugin-gradle:_"

    const val remotedata: String = "com.github.torresmi:remotedata:_"

    const val material: String = "com.google.android.material:material:_"

    const val moshi: String = "com.squareup.moshi:moshi:_"

    const val converter_moshi: String = "com.squareup.retrofit2:converter-moshi:_"

    const val retrofit: String = "com.squareup.retrofit2:retrofit:_"

    const val gradle_android_junit_jacoco_plugin: String =
            "com.vanniktech:gradle-android-junit-jacoco-plugin:_"

    const val de_fayard_buildsrclibs_gradle_plugin: String =
            "de.fayard.buildSrcLibs:de.fayard.buildSrcLibs.gradle.plugin:_"

    const val io_arrow_kt_analysis_kotlin_gradle_plugin: String =
            "io.arrow-kt.analysis.kotlin:io.arrow-kt.analysis.kotlin.gradle.plugin:_"

    const val arrow_analysis_kotlin_plugin: String = "io.arrow-kt:arrow-analysis-kotlin-plugin:_"

    const val arrow_analysis_laws: String = "io.arrow-kt:arrow-analysis-laws:_"

    const val arrow_analysis_types: String = "io.arrow-kt:arrow-analysis-types:_"

    const val arrow_core: String = "io.arrow-kt:arrow-core:_"

    const val coil: String = "io.coil-kt:coil:_"

    const val kotlin_faker: String = "io.github.serpro69:kotlin-faker:_"

    const val detekt_gradle_plugin: String = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:_"

    const val koin_android: String = "io.insert-koin:koin-android:_"

    const val koin_test: String = "io.insert-koin:koin-test:_"

    const val kotest_assertions_core: String = "io.kotest:kotest-assertions-core:_"

    const val kotest_property: String = "io.kotest:kotest-property:_"

    const val kotest_runner_junit5: String = "io.kotest:kotest-runner-junit5:_"

    const val mockk: String = "io.mockk:mockk:_"

    const val org_jacoco_agent: String = "org.jacoco:org.jacoco.agent:_"

    const val org_jacoco_ant: String = "org.jacoco:org.jacoco.ant:_"

    const val kotlin_android_extensions: String = "org.jetbrains.kotlin:kotlin-android-extensions:_"

    const val kotlin_android_extensions_runtime: String =
            "org.jetbrains.kotlin:kotlin-android-extensions-runtime:_"

    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:_"

    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:_"

    const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:_"

    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:_"

    const val kotlinx_coroutines_core: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:_"

    const val kotlinx_coroutines_test: String = "org.jetbrains.kotlinx:kotlinx-coroutines-test:_"

    const val sonarqube_gradle_plugin: String =
            "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:_"
}
